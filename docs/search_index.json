[
["index.html", "Informatics Technology for Cancer Research (ITCR): Documentation and Usability About this Course", " Informatics Technology for Cancer Research (ITCR): Documentation and Usability Candace Savonen 2021-04-09 About this Course This course is part of a series of courses for the Informatics Technology for Cancer Research (ITCR) called the Informatics Technology for Cancer Research Education Resource. This material was created by the ITCR Training Network (ITN) which is a collaborative effort of researchers around the United States to support cancer informatics and data science training through resources, technology, and events. Our courses feature tools developed by ITCR Investigators and make it easier for principal investigators, scientists, and analysts to integrate cancer informatics into their workflows. Please see our website at https://www.itcrtraining.org/ for more information. "],
["introduction.html", "Chapter 1 Introduction 1.1 Motivation", " Chapter 1 Introduction Cancer datasets are plentiful, complicated, and hold information that may be critical for the next research advancements. In order to use these data to their full potential, researchers are dependent on the specialized data tools that are continually being published and developed. Bioinformatics tools can often be unfriendly to their users, who often have little to no background in programming (Bolchini et al. 2008). The usability and quality of the documentation of a tool can be a major factor in how efficiently a researcher is able to obtain useful findings for the next steps of their research. 1.1 Motivation Increasing the usability and quality of documentation for a tool is not only helpful for the researcher users, but also for the developers themselves – the many hours of work put into the product will have a higher impact if the tool is usable by the target user community. Even the most well-programmed tool will be overlooked by the user community if there is little to no user-friendly documentation. 1.1.1 Target Audience The course is intended for cancer informatics tool developers, particularly those creating tools as a part of the Informatics Technology Cancer Research. 1.1.2 Curriculum The curriculum for this course will cover the basics of: Understanding why usability and documentation is vital Identifying your user community Building documentation and tutorials to maximize the usability of developed tools Obtaining feedback from your users The course includes a hands-on exercises with templates for building documentation and tutorials for cancer informatics tools. Individuals who take this course are encouraged to use these templates as they follow along with the course material to help increase the usability of their informatics tool. References "],
["lessons-we-should-borrow-from-user-designers.html", "Chapter 2 Lessons we should borrow from user designers 2.1 Learning Objectives 2.2 Thinking about user-centered development 2.3 General principles about user-friendliness", " Chapter 2 Lessons we should borrow from user designers 2.1 Learning Objectives This chapter will demonstrate how to: Understand that user design is a form of empathy Learn about your user community Use visuals where possible Make tool documentation easy to find 2.2 Thinking about user-centered development Creating tools that are easy to use starts with thinking about your user’s perspective. In other words, user design is an exercise in applied empathy (Matos et al. 2013). This is why a common saying in user design is “You are not your user”(Alexakis, n.d.). Although it may be true that you may have a lot in common with your user, this saying is based in the idea that you should not assume your user knows what you know or thinks like you do. For example, a warning message that may seem perfectly clear to you as a developer, may be a foreign language to your user. 1 As compared to yourself, your typical user may likely have a different: - Educational background. - Programming experience level. - Set of motivations for using your tool. And most importantly your user does not know your tool like you do! You have spent many, many hours developing this tool and its unrealistic and impractical for them to spend the same number of hours with your tool that you have. Similarly, you don’t have the time to personally give every user a tour of the ins and outs of your tool. So how do you clearly communicate the proper use and other really nifty aspects of your tool? 2.2.1 Generalities about bioinformatics tool users On a general level, there are some characteristics we know about bioinformatic tool user communities []. The typical user of bioinformatics tools are generally: - Highly educated in their specific research topic. - Skilled at picking up new information. - Unlikely to have much experience in programming; may be uncomfortable with using command line. - If they do have experience programming, it’s likely been from informal and self-taught learning. - Like many professionals, likely to feel time pressure from deadlines. Exercise: Think about these questions in regards to the user community for your tool. Write down what you know (or think you know) and try to identify any knowledge gaps you might have about your user community. Who is your user community? What need of theirs is addressed by your tool? What kinds of skills does your tool assume your user has? Keep the questions about your user community in mind and in a later chapter, we’ll go into more detail about conducting user research to address any knowledge gaps you may have about your user community. 2.3 General principles about user-friendliness 2.3.0.1 Humans like visuals Humans are drawn to intuitive visuals. Visuals are efficient means of communication and help users absorb information better than long-winded paragraphs (though visuals need an accompanying explanation too). 2.3.0.2 Stay away from jargon What someone considers jargon is a very relative to their own experiences. Terms that may seem like common knowledge to you may be foreign to your user. For example, even an abbreviation like TSV may not be something a user understands what it means. Instead, spell out abbreviations the first time you mention them (e.g. tab separated values). This doesn’t mean you have to have long winded explanations of every term, instead you can quickly link out to an article or website with information about a term you’ve used (e.g. tab separated values file (TSV)). This has the benefit of saving you and your user’s time without making your explanations too long winded. 2.3.0.3 Make help easy to find When your user has a question in mind, it can make their experience a lot more stress-free if they can find their answer with ease. Keep in mind users are humans in a context. Humans have demands in their life distracting them, or are otherwise been working a long day, and are tired/frustrated/distracted/frazzled/etc. And its not always obvious where you have put an answer to something, particularly if user is already frustrated; deep in the troubleshooting trenches! For these reasons, “findability” is important for your tool and documentation. Increasing “findability” your tools’ aspects: - Workshop an intuitive layout - Minimize the number of clicks for finding help! – The more important a piece of information is to a users’ ability to use your tool, the more it should be in the forefront of your tool! - Be consistent about where to find things. Once a user has caught on to your pattern of how you store things in your tool, don’t switch it – patterns are super helpful! 2.3.0.4 Provide a method of contact No matter how much you have perfected your tool, it will never be perfect, especially since software deprecates over time. Because of this or other unknown unknowns, a usable tool still has a way for a user to let the developers know when something isn’t working. This might a direct and obvious break like a bug or broken link, but it could also be something more subtle that also requires your attention. It may sound disappointing that a user has found a problem but this is something to be happy about! 1) This means someone is interested and invested in using your tool! 2) They’ve identified a way to improve your tool to make it even better! Now that we’ve discussed some major principles about users and design, let’s dive in to talking about how documentation can help! References "],
["about-the-authors.html", "About the Authors", " About the Authors Candace Savonen is a Research Associate in the Department of Biostatistics at the Johns Hopkins Bloomberg School of Public Health. She creates bioinformatic education materials for cancer genomics, looking for ways to emphasize reproducibility and good data science practices. Her research background is in Neuroscience. "]
]
